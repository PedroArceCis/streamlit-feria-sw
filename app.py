import streamlit as st
from utils.data import load_projects, load_sessions, load_taxonomies, ensure_session_state

st.set_page_config(page_title="Feria de Software en l√≠nea", page_icon="ü§ì", layout="wide")

# Inicializar estado global
ensure_session_state()

# Cargar datos (cacheados)
projects = load_projects()
sessions = load_sessions()

st.title("Feria de Software en l√≠nea ‚Äî MVP")
st.write(
    "Bienvenid@. Usa la navegaci√≥n de la izquierda para visitar **Home**, **Explorar**, **Programa** y **Mi Feria**. "
    "Este prototipo aplica principios de **usabilidad**, **modelo conceptual**, **visibilidad**, **mapeo**, "
    "**retroalimentaci√≥n**, y ciclo **Lean UX** a trav√©s de un flujo simple: descubrir ‚Üí comprender ‚Üí comparar/accionar."
)

st.subheader("Atajos √∫tiles")
st.markdown("- **Explorar**: B√∫squeda + filtros facetados para encontrar proyectos relevantes.")
st.markdown("- **Programa**: Seminarios y paneles por track; a√±ade sesiones a tu agenda personal.")
st.markdown("- **Mi Feria**: Favoritos, Comparar (hasta 3) y descargar tu agenda en **.ics**.")

with st.expander("¬øQu√© incluye este MVP? (criterios de dise√±o)"):
    st.markdown("""
- **Modelo de contenido estandarizado** (fichas) para reducir ambig√ºedad.
- **Visibilidad del estado**: etiquetas, chips de filtros activos, favoritos y comparaciones en sesi√≥n.
- **Mapeo y feedback inmediato**: resultados se actualizan al instante; l√≠mites (p. ej., comparar ‚â§ 3) con mensajes claros.
- **Manipulaci√≥n directa**: agregar/quitar favoritos/comparaci√≥n con toggles; arrastrar no se incluye, pero el patr√≥n de reversibilidad s√≠.
- **Pruebas formativas**: tareas cr√≠ticas medibles (descubrimiento, comprensi√≥n, acci√≥n) listas para instrumentar.
""")
st.info("Sugerencia: ve a **Home** para un onboarding por intereses y arranca desde ah√≠.")

st.caption("Versi√≥n MVP para docencia ‚Äî Streamlit")
